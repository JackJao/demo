<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>org.jaon.springboot</groupId>
	<artifactId>demo</artifactId>
	<version>1.0-SNAPSHOT</version>
	<packaging>jar</packaging>
	<!--打包文件类型,war使用外部tomcat部署，需要注释APP类，启用APPTomcat类-->
	<!--<packaging>war</packaging>-->
	<description>
		<![CDATA[<p>
		你好，这里是描述
		</p>]]>
	</description>
	<developers>
		<developer>
			<id>NO.0001</id>
			<name>GaoJie</name>
			<email>766056142.qq.com</email>
			<organization>SiChuangRSR</organization>
			<organizationUrl>https://www.rsr.com</organizationUrl>
			<roles>
				<role>coreDev</role>
				<role>envBuild</role>
			</roles>
			<timezone>+8</timezone>
			<url>http://www.jcoder.com</url>
		</developer>
	</developers>
	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<java.version>1.8</java.version>
		<mysql.version>8.0.20</mysql.version>
		<mybatis.version>1.3.2</mybatis.version>
		<fastjson.version>1.2.47</fastjson.version>
		<swagger.version>2.6.1</swagger.version>
		<jedis.version>2.9.0</jedis.version>
		<activemq-core.version>5.7.0</activemq-core.version>
		<javamelody.version>1.82.0</javamelody.version>
		<itext.version>2.1.7</itext.version>
		<xstream.version>1.4.19</xstream.version>
		<jrobin.version>1.5.9</jrobin.version>
		<alipay-sdk-java.version>4.9.28.ALL</alipay-sdk-java.version>
		<druid.version>1.1.23</druid.version>
	</properties>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.0.1.RELEASE</version>
	</parent>
	<dependencies>
		<!-- 加入依赖后，访问需要用户登录：默认用户user，密码，启动的时候会输出-->
		<!-- 如：
		Using generated security password: 3eb7634f-ec43-42aa-b83d-9193d0f52c0d
		ps:默认拦截所有的请求,需要通过验证才能访问
		-->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-security</artifactId>
		</dependency>

		<!-- spring boot 对thymeleaf支持,thymeleaf依赖 thymeleaf-springX,这里自动引入了thymeleaf-spring5-->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-thymeleaf</artifactId>
		</dependency>
		<!--websocket 支持-->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-websocket</artifactId>
		</dependency>
		<!-- 开启消息队列支持,注解支持-->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-activemq</artifactId>
		</dependency>
		<!-- spring boot 对druid数据库连接池的支持 -->
		<dependency>
			<groupId>com.alibaba</groupId>
			<artifactId>druid-spring-boot-starter</artifactId>
			<version>${druid.version}</version>
		</dependency>
		<!-- activemq-core 消息队列依赖包-->
		<dependency>
			<groupId>org.apache.activemq</groupId>
			<artifactId>activemq-core</artifactId>
			<version>${activemq-core.version}</version>
		</dependency>
		<!--Jedis 对 Redis 的支持 依赖-->
		<dependency>
			<groupId>redis.clients</groupId>
			<artifactId>jedis</artifactId>
			<version>${jedis.version}</version>
		</dependency>
		<!--spring boot redis support-->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-redis</artifactId>
		</dependency>
		<!-- api 地址 http://localhost:8080/swagger-ui.html-->
		<!-- swagger2依赖 -->
		<dependency>
			<groupId>io.springfox</groupId>
			<artifactId>springfox-swagger2</artifactId>
			<version>${swagger.version}</version>
		</dependency>
		<!--swagger2 ui 支持-->
		<dependency>
			<groupId>io.springfox</groupId>
			<artifactId>springfox-swagger-ui</artifactId>
			<version>${swagger.version}</version>
		</dependency>
		<!--json支持-->
		<dependency>
			<groupId>com.alibaba</groupId>
			<artifactId>fastjson</artifactId>
			<version>${fastjson.version}</version>
		</dependency>
		<!-- spring mvc 支持 版本号在spring-boot-starter-parent 的pom中dependencyManagement(只是用于管理依赖，实际依赖使用dependencies)中已经管理了 -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
			<!--方式一 1.打包war包移除内部tomcat的4个依赖包,并添加sevet依赖-->
			<!--<exclusions>
				<exclusion>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-starter-tomcat</artifactId>
				</exclusion>
			</exclusions>-->
		</dependency>
		<!--方式一 2.打包war,添加servlet的依赖不然编译打包不通过,provided-编译期有效，运行期不需要提供，不会打入包中-->
		<!--<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>javax.servlet-api</artifactId>
			<version>3.1.0</version>
			<scope>provided</scope>
		</dependency>-->
		<!--方式二 1.可选；可以不配置；配置了只移除tomcat依赖包4个，测试（tomcat9）移除和不移除对war部署在tomcat没影响，只是在lib中没有tomcat的依赖-->
		<!--<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-tomcat</artifactId>
			<scope>provided</scope>
		</dependency>-->
		<!-- mybatis 1.3.2 支持 -->
		<dependency>
			<groupId>org.mybatis.spring.boot</groupId>
			<artifactId>mybatis-spring-boot-starter</artifactId>
			<version>${mybatis.version}</version>
		</dependency>
		<!-- spring boot 测试支持 -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		
		<!-- spring boot 中默认使用的是5.1.46的版本，现在使用自己的版本6.0.6(驱动:com.mysql.cj.jdbc.Driver，连接加时区参数:serverTimezone=GMT) -->
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
		</dependency>
		<!--支付宝h5支付-->
		<dependency>
			<groupId>com.alipay.sdk</groupId>
			<artifactId>alipay-sdk-java</artifactId>
			<version>${alipay-sdk-java.version}</version>
		</dependency>
		<!--javamelody start-->
		<!--javamelody，springboot插件-->
		<dependency>
			<groupId>net.bull.javamelody</groupId>
			<artifactId>javamelody-spring-boot-starter</artifactId>
			<version>${javamelody.version}</version>
		</dependency>
		<!-- itext,增加pdf导出选项功能 -->
		<dependency>
			<groupId>com.lowagie</groupId>
			<artifactId>itext</artifactId>
			<version>${itext.version}</version>
			<exclusions>
				<exclusion>
					<artifactId>bcmail-jdk14</artifactId>
					<groupId>bouncycastle</groupId>
				</exclusion>
				<exclusion>
					<artifactId>bcprov-jdk14</artifactId>
					<groupId>bouncycastle</groupId>
				</exclusion>
				<exclusion>
					<artifactId>bctsp-jdk14</artifactId>
					<groupId>bouncycastle</groupId>
				</exclusion>
			</exclusions>
		</dependency>
		<!--The dependencies jrobin (included in javamelody-core) and
		if you wish xstream as an option for the xml and json export are:-->
		<dependency>
			<groupId>com.thoughtworks.xstream</groupId>
			<artifactId>xstream</artifactId>
			<version>${xstream.version}</version>
		</dependency>
		<dependency>
			<groupId>org.jrobin</groupId>
			<artifactId>jrobin</artifactId>
			<version>${jrobin.version}</version>
		</dependency>
		<!--javamelody end  -->

	</dependencies>
	<!-- 依赖管理 -->
	<dependencyManagement>
		<dependencies>
			<!-- 覆盖spring boot 中默认使用的版本 -->
			<dependency>
				<groupId>mysql</groupId>
				<artifactId>mysql-connector-java</artifactId>
				<version>${mysql.version}</version>
			</dependency>
		</dependencies>
		
	</dependencyManagement>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
		</plugins>
	</build>
</project>
